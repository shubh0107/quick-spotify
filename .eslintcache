[{"/Users/shubham/dev/quick-spotify/src/reportWebVitals.js":"1","/Users/shubham/dev/quick-spotify/src/App.js":"2","/Users/shubham/dev/quick-spotify/src/index.js":"3","/Users/shubham/dev/quick-spotify/src/SpotifyService.js":"4","/Users/shubham/dev/quick-spotify/src/hooks/useLocalStorage.js":"5","/Users/shubham/dev/quick-spotify/src/pages/utilities/constants.js":"6","/Users/shubham/dev/quick-spotify/src/pages/Login.js":"7","/Users/shubham/dev/quick-spotify/src/pages/Home.js":"8","/Users/shubham/dev/quick-spotify/src/components/index.js":"9","/Users/shubham/dev/quick-spotify/src/components/Button.js":"10","/Users/shubham/dev/quick-spotify/src/components/Modal.js":"11"},{"size":362,"mtime":1607720098482,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1608132381042,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1607720098482,"results":"15","hashOfConfig":"13"},{"size":270,"mtime":1607758139844,"results":"16","hashOfConfig":"13"},{"size":494,"mtime":1607843932365,"results":"17","hashOfConfig":"13"},{"size":1850,"mtime":1607971072671,"results":"18","hashOfConfig":"13"},{"size":3144,"mtime":1608748140703,"results":"19","hashOfConfig":"13"},{"size":7361,"mtime":1608665024612,"results":"20","hashOfConfig":"13"},{"size":91,"mtime":1608305506569,"results":"21","hashOfConfig":"13"},{"size":363,"mtime":1608091754485,"results":"22","hashOfConfig":"13"},{"size":3827,"mtime":1608306302332,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1os3mv1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/shubham/dev/quick-spotify/src/reportWebVitals.js",[],["48","49"],"/Users/shubham/dev/quick-spotify/src/App.js",[],"/Users/shubham/dev/quick-spotify/src/index.js",[],"/Users/shubham/dev/quick-spotify/src/SpotifyService.js",[],"/Users/shubham/dev/quick-spotify/src/hooks/useLocalStorage.js",[],"/Users/shubham/dev/quick-spotify/src/pages/utilities/constants.js",[],"/Users/shubham/dev/quick-spotify/src/pages/Login.js",["50","51"],"/Users/shubham/dev/quick-spotify/src/pages/Home.js",["52","53","54","55","56","57","58","59","60"],"import { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useHistory } from 'react-router-dom';\nimport SpotifyService from '../SpotifyService';\nimport './Home.scss';\nimport { Button } from '../components';\nimport { Modal } from '../components';\n\nimport { useTransition, useSpring, animated } from 'react-spring';\n\nconst Home = props => {\n\n  let history = useHistory();\n  const [accessToken, setAccessToken] = useLocalStorage('accessToken');\n  const [topTracks, setTopTracks] = useState(null);\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const spotify = useRef(null);\n\n  const [openModal, setOpenModal] = useState(false);\n\n\n  useEffect(() => {\n    if (!accessToken || accessToken === '') {\n      history.push('/');\n    } else {\n      spotify.current = new SpotifyService(accessToken);\n      let promise1 = spotify.current.spotifyApi.getMyTopTracks({\n        limit: 50,\n        time_range: 'short_term',\n        offset: 0\n      });\n      let promise2 = spotify.current.spotifyApi.getMyTopTracks({\n        limit: 50,\n        time_range: 'medium_term',\n        offset: 0,\n      });\n      let promise3 = spotify.current.spotifyApi.getMyTopTracks({\n        limit: 50,\n        time_range: 'long_term',\n        offset: 0\n      });\n\n      Promise.all([promise1, promise2, promise3])\n        .then(res => {\n          console.log('response: ', res);\n          setTopTracks(res);\n        }).catch(err => {\n          console.log('error: ', err);\n          if (err.status === 401) {\n            setAccessToken('');\n          }\n        })\n    }\n  }, [accessToken, history, spotify, setAccessToken])\n\n  function getTrackDetails(trackId) {\n    return spotify.current.spotifyApi.getTrack(trackId);\n  }\n\n  if (!topTracks) {\n    return <div className=\"h-screen bg-gray-900 text-white text-center\">Loading....</div>\n  }\n\n  if (topTracks) {\n    // return <div className=\"h-full grid grid-cols-2 place-items-auto bg-gray-900 text-white p-10\">\n    return <div className=\"min-h-screen h-full flex justify-between bg-gray-900 text-white p-10\">\n\n      <div className=\"pt-2 px-5 -mx-5 w-1/2\">\n        <h3 className=\"mb-2 initial-click\">Last Month</h3>\n        <TopSongs tracks={topTracks[0].items} setCurrentTrack={setCurrentTrack} getTrackDetails={getTrackDetails} />\n        <h3 className=\"mb-2\">Last 6 Months</h3>\n        <TopSongs tracks={topTracks[1].items} setCurrentTrack={setCurrentTrack} getTrackDetails={getTrackDetails} />\n        <h3 className=\"mb-2\">All Time</h3>\n        <TopSongs tracks={topTracks[2].items} setCurrentTrack={setCurrentTrack} getTrackDetails={getTrackDetails} />\n      </div>\n\n      <div className=\"w-1/2\">\n        {currentTrack ? <TrackPreview track={currentTrack} getTrackDetails={getTrackDetails} accessToken={accessToken} /> : ''}\n      </div>\n      {/* <div> */}\n      {/* <Button onClick={() => setOpenModal(true)}>Open</Button> */}\n      {/* </div> */}\n      {/* <Modal visible={true} /> */}\n    </div>\n  }\n}\n\n\n\nconst TopSongs = ({ tracks, setCurrentTrack, getTrackDetails }) => {\n  console.log('rendering TOP SONGS:');\n  const currentAudio = useRef(null);\n\n  function playAudio(track) {\n    // let isPreviousAudioPlaying = currentAudio.current.currentTime > 0 &&\n    //  !currentAudio.current.paused && !currentAudio.current.ended && currentAudio.current.readyState > 2;\n\n    // if (isPreviousAudioPlaying) {\n    //   currentAudio.current.pause();\n    // }\n\n    // if (currentAudio.current && currentAudio.current.currentTime > 0) {\n    //   currentAudio.current.pause();\n    // }\n    setCurrentTrack(track);\n    let { id, preview_url } = track;\n\n    if (preview_url) {\n      // currentAudio.current = new Audio(preview_url);\n      // currentAudio.current.play();\n    } else {\n      // getTrackDetails(`${id}?market=from_token`).then(trackDetails => {\n      //   console.log('track data: ', trackDetails);\n      //   // currentAudio.current = new Audio(trackDetails.preview_url);\n      //   // currentAudio.current.play();\n      // }).catch(err => {\n      //   console.log('error: ', err);\n      // })\n    }\n  }\n\n  function stopAudio(url) {\n    // currentAudio.current.pause();\n    setCurrentTrack(null)\n  }\n\n  const transitions = useTransition(tracks, track => track.id, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 }\n  })\n\n  return (\n    <div className=\"grid grid-cols-5 lg:grid-cols-10 mb-5\">\n      {transitions.map(({ item, props, key }) => {\n        const { id, name, album } = item;\n        const { images } = album;\n        return (\n          <animated.div\n            style={props}\n            key={key}\n            className=\"z-0 transform ease-in-out transition hover:scale-150 hover:z-20 hover:shadow-lg\"\n            onMouseEnter={e => playAudio(item)}\n            onMouseLeave={e => stopAudio(item)}\n          >\n            <img src={images[0].url} alt=\"song-img\" />\n          </animated.div>\n        )\n      })}\n    </div>\n  )\n}\n\n\nconst TrackPreview = ({ track, getTrackDetails, accessToken }) => {\n  // console.log('track preview: ', track)\n  let { id, preview_url } = track;\n  const currentAudio = useRef(null);\n\n  const CancelToken = axios.CancelToken;\n  const source = CancelToken.source();\n\n\n\n  useEffect(() => {\n\n    function playAudio(url) {\n      if (url) {\n        currentAudio.current = new Audio(url);\n        currentAudio.current.play();\n      } else {\n        axios.get(`https://api.spotify.com/v1/tracks/${id}?market=from_token`, {\n          headers: { 'Authorization': `Bearer ${accessToken}` },\n          cancelToken: source.token\n        }).then(({ data }) => {\n          console.log('playng audio: ', data);\n          if (data.preview_url) {\n            playAudio(data.preview_url);\n          }\n        }).catch(err => {\n          if (axios.isCancel(err)) {\n            console.log('Request canceled', err.message);\n          } else {\n            console.log('error: ', err);\n          }\n        })\n      }\n\n    }\n\n    if (currentAudio.current) {\n      currentAudio.current.pause();\n    }\n\n    playAudio(preview_url);\n\n    return () => {\n      source.cancel('New track received.');\n\n      if (currentAudio.current) {\n        currentAudio.current.pause();\n      }\n    }\n  }, [id, preview_url, getTrackDetails, accessToken, source]);\n\n  const fadeIn = useSpring({\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n    config: {\n      duration: 300\n    }\n  })\n\n  const fadeOut = useSpring({\n    from: { opacity: 1 },\n    to: { opacity: 0 },\n    config: {\n      duration: 300\n    }\n  })\n\n\n  if (track) {\n    const { name, album, artists } = track;\n    const { images } = album;\n    const artistName = artists.reduce(((completeName, artist, index) => {\n      if (index === artists.length - 1 && artists.length > 1) {\n        completeName += ' & ';\n      } else {\n        completeName += index !== 0 ? ', ' : '';\n      }\n      return completeName += ` ${artist.name}`\n    }), '');\n    return <div className=\"sticky top-1/4 lg:top-20 md:m-2 lg:m-10 float-right lg:my-0\">\n      <div className=\"\">\n        <animated.img src={images[0].url} alt={name} style={fadeIn} />\n      </div>\n      <animated.h2 className=\"text-2xl mt-2 leading-tight\" style={fadeIn}>{name}</animated.h2>\n      <animated.h3 className=\"text-sm italic\" style={fadeIn}>{artistName}</animated.h3>\n    </div>\n  }\n\n  return '';\n}\n\n\nexport default Home;","/Users/shubham/dev/quick-spotify/src/components/index.js",[],"/Users/shubham/dev/quick-spotify/src/components/Button.js",[],"/Users/shubham/dev/quick-spotify/src/components/Modal.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":20,"nodeType":"67","messageId":"68","endLine":16,"endColumn":31},{"ruleId":"65","severity":1,"message":"69","line":70,"column":12,"nodeType":"67","messageId":"68","endLine":70,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"71","line":8,"column":10,"nodeType":"67","messageId":"68","endLine":8,"endColumn":15},{"ruleId":"65","severity":1,"message":"72","line":20,"column":10,"nodeType":"67","messageId":"68","endLine":20,"endColumn":19},{"ruleId":"65","severity":1,"message":"73","line":20,"column":21,"nodeType":"67","messageId":"68","endLine":20,"endColumn":33},{"ruleId":"65","severity":1,"message":"74","line":93,"column":9,"nodeType":"67","messageId":"68","endLine":93,"endColumn":21},{"ruleId":"65","severity":1,"message":"75","line":107,"column":11,"nodeType":"67","messageId":"68","endLine":107,"endColumn":13},{"ruleId":"65","severity":1,"message":"75","line":136,"column":17,"nodeType":"67","messageId":"68","endLine":136,"endColumn":19},{"ruleId":"65","severity":1,"message":"76","line":136,"column":21,"nodeType":"67","messageId":"68","endLine":136,"endColumn":25},{"ruleId":"65","severity":1,"message":"77","line":214,"column":9,"nodeType":"67","messageId":"68","endLine":214,"endColumn":16},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar","'getAccessToken' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'openModal' is assigned a value but never used.","'setOpenModal' is assigned a value but never used.","'currentAudio' is assigned a value but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'fadeOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]